// Contract ABIs by version
export const abi = {
  v1: [
    {
      inputs: [
        { internalType: "string", name: "_tokenName", type: "string" },
        { internalType: "string", name: "_tokenSymbol", type: "string" },
      ],
      payable: false,
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "approved",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "ApprovalForAll",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "_to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_tokenId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "_invocations",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "_value",
          type: "uint256",
        },
      ],
      name: "Mint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        { indexed: true, internalType: "address", name: "to", type: "address" },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      constant: false,
      inputs: [
        {
          internalType: "uint256",
          name: "_pricePerTokenInWei",
          type: "uint256",
        },
        { internalType: "bool", name: "_dynamic", type: "bool" },
      ],
      name: "addProject",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "addProjectScript",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "addWhitelisted",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "admin",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "approve",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "artblocksAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "artblocksPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "owner", type: "address" }],
      name: "balanceOf",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "clearTokenIpfsImageUri",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "getApproved",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "getRoyaltyData",
      outputs: [
        { internalType: "address", name: "artistAddress", type: "address" },
        { internalType: "address", name: "additionalPayee", type: "address" },
        {
          internalType: "uint256",
          name: "additionalPayeePercentage",
          type: "uint256",
        },
        { internalType: "uint256", name: "royaltyFeeByID", type: "uint256" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      name: "hashToTokenId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "address", name: "operator", type: "address" },
      ],
      name: "isApprovedForAll",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "", type: "address" }],
      name: "isWhitelisted",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "name",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "nextProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_tokenId", type: "uint256" },
        { internalType: "string", name: "_ipfsHash", type: "string" },
      ],
      name: "overrideTokenDynamicImageWithIpfsLink",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "ownerOf",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectDetails",
      outputs: [
        { internalType: "string", name: "projectName", type: "string" },
        { internalType: "string", name: "artist", type: "string" },
        { internalType: "string", name: "description", type: "string" },
        { internalType: "string", name: "website", type: "string" },
        { internalType: "string", name: "license", type: "string" },
        { internalType: "bool", name: "dynamic", type: "bool" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "projectScriptByIndex",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectScriptInfo",
      outputs: [
        { internalType: "string", name: "scriptJSON", type: "string" },
        { internalType: "uint256", name: "scriptCount", type: "uint256" },
        { internalType: "uint256", name: "hashes", type: "uint256" },
        { internalType: "string", name: "ipfsHash", type: "string" },
        { internalType: "bool", name: "locked", type: "bool" },
        { internalType: "bool", name: "paused", type: "bool" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectShowAllTokens",
      outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectTokenInfo",
      outputs: [
        { internalType: "address", name: "artistAddress", type: "address" },
        {
          internalType: "uint256",
          name: "pricePerTokenInWei",
          type: "uint256",
        },
        { internalType: "uint256", name: "invocations", type: "uint256" },
        { internalType: "uint256", name: "maxInvocations", type: "uint256" },
        { internalType: "bool", name: "active", type: "bool" },
        { internalType: "address", name: "additionalPayee", type: "address" },
        {
          internalType: "uint256",
          name: "additionalPayeePercentage",
          type: "uint256",
        },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectURIInfo",
      outputs: [
        { internalType: "string", name: "projectBaseURI", type: "string" },
        { internalType: "string", name: "projectBaseIpfsURI", type: "string" },
        { internalType: "bool", name: "useIpfs", type: "bool" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "purchase",
      outputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      payable: true,
      stateMutability: "payable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "_to", type: "address" },
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "purchaseTo",
      outputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      payable: true,
      stateMutability: "payable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "removeProjectLastScript",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "removeWhitelisted",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
        { internalType: "bytes", name: "_data", type: "bytes" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "to", type: "address" },
        { internalType: "bool", name: "approved", type: "bool" },
      ],
      name: "setApprovalForAll",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "showTokenHashes",
      outputs: [{ internalType: "bytes32[]", name: "", type: "bytes32[]" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "staticIpfsImageLink",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
      name: "supportsInterface",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "symbol",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsActive",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsDynamic",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsLocked",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsPaused",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectUseIpfsForStatic",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "index", type: "uint256" }],
      name: "tokenByIndex",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "tokenIdToProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "uint256", name: "index", type: "uint256" },
      ],
      name: "tokenOfOwnerByIndex",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenURI",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "owner", type: "address" }],
      name: "tokensOfOwner",
      outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "totalSupply",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "transferFrom",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        {
          internalType: "address payable",
          name: "_artblocksAddress",
          type: "address",
        },
      ],
      name: "updateArtblocksAddress",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        {
          internalType: "uint256",
          name: "_artblocksPercentage",
          type: "uint256",
        },
      ],
      name: "updateArtblocksPercentage",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_additionalPayee",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeePercentage",
          type: "uint256",
        },
      ],
      name: "updateProjectAdditionalPayeeInfo",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
      ],
      name: "updateProjectArtistAddress",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectArtistName", type: "string" },
      ],
      name: "updateProjectArtistName",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectBaseIpfsURI", type: "string" },
      ],
      name: "updateProjectBaseIpfsURI",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_newBaseURI", type: "string" },
      ],
      name: "updateProjectBaseURI",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectDescription", type: "string" },
      ],
      name: "updateProjectDescription",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_hashes", type: "uint256" },
      ],
      name: "updateProjectHashesGenerated",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_ipfsHash", type: "string" },
      ],
      name: "updateProjectIpfsHash",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectLicense", type: "string" },
      ],
      name: "updateProjectLicense",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_maxInvocations", type: "uint256" },
      ],
      name: "updateProjectMaxInvocations",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectName", type: "string" },
      ],
      name: "updateProjectName",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "uint256",
          name: "_pricePerTokenInWei",
          type: "uint256",
        },
      ],
      name: "updateProjectPricePerTokenInWei",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_scriptId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "updateProjectScript",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectScriptJSON", type: "string" },
      ],
      name: "updateProjectScriptJSON",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "uint256",
          name: "_secondMarketRoyalty",
          type: "uint256",
        },
      ],
      name: "updateProjectSecondaryMarketRoyaltyPercentage",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectWebsite", type: "string" },
      ],
      name: "updateProjectWebsite",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  v2: [
    {
      inputs: [
        { internalType: "string", name: "_tokenName", type: "string" },
        { internalType: "string", name: "_tokenSymbol", type: "string" },
        { internalType: "address", name: "_randomizeraddr", type: "address" },
      ],
      payable: false,
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "approved",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "ApprovalForAll",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "_to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_tokenId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
      ],
      name: "Mint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        { indexed: true, internalType: "address", name: "to", type: "address" },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      constant: false,
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "addMintWhitelisted",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "string", name: "_projectName", type: "string" },
        { internalType: "address", name: "_artistAddress", type: "address" },
        {
          internalType: "uint256",
          name: "_pricePerTokenInWei",
          type: "uint256",
        },
        { internalType: "bool", name: "_dynamic", type: "bool" },
      ],
      name: "addProject",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "addProjectScript",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "addWhitelisted",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "admin",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "approve",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "artblocksAddress",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "artblocksPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "owner", type: "address" }],
      name: "balanceOf",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "clearTokenIpfsImageUri",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "getApproved",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "getRoyaltyData",
      outputs: [
        { internalType: "address", name: "artistAddress", type: "address" },
        { internalType: "address", name: "additionalPayee", type: "address" },
        {
          internalType: "uint256",
          name: "additionalPayeePercentage",
          type: "uint256",
        },
        { internalType: "uint256", name: "royaltyFeeByID", type: "uint256" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      name: "hashToTokenId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "address", name: "operator", type: "address" },
      ],
      name: "isApprovedForAll",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "", type: "address" }],
      name: "isMintWhitelisted",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "", type: "address" }],
      name: "isWhitelisted",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "_to", type: "address" },
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "address", name: "_by", type: "address" },
      ],
      name: "mint",
      outputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "name",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "nextProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_tokenId", type: "uint256" },
        { internalType: "string", name: "_ipfsHash", type: "string" },
      ],
      name: "overrideTokenDynamicImageWithIpfsLink",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "ownerOf",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectDetails",
      outputs: [
        { internalType: "string", name: "projectName", type: "string" },
        { internalType: "string", name: "artist", type: "string" },
        { internalType: "string", name: "description", type: "string" },
        { internalType: "string", name: "website", type: "string" },
        { internalType: "string", name: "license", type: "string" },
        { internalType: "bool", name: "dynamic", type: "bool" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToAdditionalPayee",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToAdditionalPayeePercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToArtistAddress",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToCurrencyAddress",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToCurrencySymbol",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToPricePerTokenInWei",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToSecondaryMarketRoyaltyPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "projectScriptByIndex",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectScriptInfo",
      outputs: [
        { internalType: "string", name: "scriptJSON", type: "string" },
        { internalType: "uint256", name: "scriptCount", type: "uint256" },
        { internalType: "bool", name: "useHashString", type: "bool" },
        { internalType: "string", name: "ipfsHash", type: "string" },
        { internalType: "bool", name: "locked", type: "bool" },
        { internalType: "bool", name: "paused", type: "bool" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectShowAllTokens",
      outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectTokenInfo",
      outputs: [
        { internalType: "address", name: "artistAddress", type: "address" },
        {
          internalType: "uint256",
          name: "pricePerTokenInWei",
          type: "uint256",
        },
        { internalType: "uint256", name: "invocations", type: "uint256" },
        { internalType: "uint256", name: "maxInvocations", type: "uint256" },
        { internalType: "bool", name: "active", type: "bool" },
        { internalType: "address", name: "additionalPayee", type: "address" },
        {
          internalType: "uint256",
          name: "additionalPayeePercentage",
          type: "uint256",
        },
        { internalType: "string", name: "currency", type: "string" },
        { internalType: "address", name: "currencyAddress", type: "address" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectURIInfo",
      outputs: [
        { internalType: "string", name: "projectBaseURI", type: "string" },
        { internalType: "string", name: "projectBaseIpfsURI", type: "string" },
        { internalType: "bool", name: "useIpfs", type: "bool" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "randomizeraddr",
      outputs: [{ internalType: "addr Randomizer", name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "removeMintWhitelisted",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "removeProjectLastScript",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "removeWhitelisted",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
        { internalType: "bytes", name: "_data", type: "bytes" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "to", type: "address" },
        { internalType: "bool", name: "approved", type: "bool" },
      ],
      name: "setApprovalForAll",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "staticIpfsImageLink",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
      name: "supportsInterface",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "symbol",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsActive",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsDynamic",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsLocked",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsPaused",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectUseHashString",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectUseIpfsForStatic",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "index", type: "uint256" }],
      name: "tokenByIndex",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "tokenIdToHash",
      outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "tokenIdToProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "uint256", name: "index", type: "uint256" },
      ],
      name: "tokenOfOwnerByIndex",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenURI",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "owner", type: "address" }],
      name: "tokensOfOwner",
      outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "totalSupply",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "transferFrom",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "_artblocksAddress", type: "address" },
      ],
      name: "updateArtblocksAddress",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        {
          internalType: "uint256",
          name: "_artblocksPercentage",
          type: "uint256",
        },
      ],
      name: "updateArtblocksPercentage",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "address", name: "_additionalPayee", type: "address" },
        {
          internalType: "uint256",
          name: "_additionalPayeePercentage",
          type: "uint256",
        },
      ],
      name: "updateProjectAdditionalPayeeInfo",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "address", name: "_artistAddress", type: "address" },
      ],
      name: "updateProjectArtistAddress",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectArtistName", type: "string" },
      ],
      name: "updateProjectArtistName",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectBaseIpfsURI", type: "string" },
      ],
      name: "updateProjectBaseIpfsURI",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_newBaseURI", type: "string" },
      ],
      name: "updateProjectBaseURI",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_currencySymbol", type: "string" },
        { internalType: "address", name: "_currencyAddress", type: "address" },
      ],
      name: "updateProjectCurrencyInfo",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectDescription", type: "string" },
      ],
      name: "updateProjectDescription",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_ipfsHash", type: "string" },
      ],
      name: "updateProjectIpfsHash",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectLicense", type: "string" },
      ],
      name: "updateProjectLicense",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_maxInvocations", type: "uint256" },
      ],
      name: "updateProjectMaxInvocations",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectName", type: "string" },
      ],
      name: "updateProjectName",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "uint256",
          name: "_pricePerTokenInWei",
          type: "uint256",
        },
      ],
      name: "updateProjectPricePerTokenInWei",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_scriptId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "updateProjectScript",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectScriptJSON", type: "string" },
      ],
      name: "updateProjectScriptJSON",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "uint256",
          name: "_secondMarketRoyalty",
          type: "uint256",
        },
      ],
      name: "updateProjectSecondaryMarketRoyaltyPercentage",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectWebsite", type: "string" },
      ],
      name: "updateProjectWebsite",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        {
          internalType: "address",
          name: "_randomizerAddress",
          type: "address",
        },
      ],
      name: "updateRandomizerAddress",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  v3: [
    {
      inputs: [
        { internalType: "string", name: "_tokenName", type: "string" },
        { internalType: "string", name: "_tokenSymbol", type: "string" },
        { internalType: "address", name: "_randomizeraddr", type: "address" },
        { internalType: "address", name: "_adminACLaddr", type: "address" },
        {
          internalType: "uint248",
          name: "_startingProjectId",
          type: "uint248",
        },
      ],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
      ],
      name: "AcceptedArtistAddressesAndSplits",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "approved",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "ApprovalForAll",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "_to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_tokenId",
          type: "uint256",
        },
      ],
      name: "Mint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "_currentMinter",
          type: "address",
        },
      ],
      name: "MinterUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "previousOwner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "bytes32",
          name: "_field",
          type: "bytes32",
        },
      ],
      name: "PlatformUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "bytes32",
          name: "_update",
          type: "bytes32",
        },
      ],
      name: "ProjectUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "address",
          name: "_artistAddress",
          type: "address",
        },
        {
          indexed: false,
          internalType: "address",
          name: "_additionalPayeePrimarySales",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "_additionalPayeePrimarySalesPercentage",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "address",
          name: "_additionalPayeeSecondarySales",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "_additionalPayeeSecondarySalesPercentage",
          type: "uint256",
        },
      ],
      name: "ProposedArtistAddressesAndSplits",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        { indexed: true, internalType: "address", name: "to", type: "address" },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      inputs: [],
      name: "ART_BLOCKS_ERC721TOKEN_ADDRESS_V0",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "ART_BLOCKS_ERC721TOKEN_ADDRESS_V1",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "string", name: "_projectName", type: "string" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
      ],
      name: "addProject",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "addProjectScript",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "admin",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "_sender", type: "address" },
        { internalType: "address", name: "_addr", type: "address" },
        { internalType: "bytes4", name: "_selector", type: "bytes4" },
      ],
      name: "adminACLAllowed",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "adminACLaddr",
      outputs: [
        { internalType: "addr IAdminACLV0", name: "", type: "address" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
        {
          internalType: "address payable",
          name: "_additionalPayeePrimarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeePrimarySalesPercentage",
          type: "uint256",
        },
        {
          internalType: "address payable",
          name: "_additionalPayeeSecondarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeeSecondarySalesPercentage",
          type: "uint256",
        },
      ],
      name: "adminAcceptArtistAddressesAndSplits",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "approve",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "artblocksAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "artblocksCurationRegistryAddress",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "artblocksDependencyRegistryAddress",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "artblocksPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "artblocksPrimarySalesAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "artblocksPrimarySalesPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "artblocksSecondarySalesAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "artblocksSecondarySalesBPS",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "owner", type: "address" }],
      name: "balanceOf",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "coreType",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "coreVersion",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "defaultBaseURI",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "forbidNewProjects",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "getApproved",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_index", type: "uint256" }],
      name: "getHistoricalRandomizerAt",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_price", type: "uint256" },
      ],
      name: "getPrimaryRevenueSplits",
      outputs: [
        { internalType: "uint256", name: "artblocksRevenue_", type: "uint256" },
        {
          internalType: "address payable",
          name: "artblocksAddress_",
          type: "address",
        },
        { internalType: "uint256", name: "artistRevenue_", type: "uint256" },
        {
          internalType: "address payable",
          name: "artistAddress_",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "additionalPayeePrimaryRevenue_",
          type: "uint256",
        },
        {
          internalType: "address payable",
          name: "additionalPayeePrimaryAddress_",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "getRoyalties",
      outputs: [
        {
          internalType: "address payable[]",
          name: "recipients",
          type: "address[]",
        },
        { internalType: "uint256[]", name: "bps", type: "uint256[]" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "getRoyaltyData",
      outputs: [
        { internalType: "address", name: "artistAddress", type: "address" },
        { internalType: "address", name: "additionalPayee", type: "address" },
        {
          internalType: "uint256",
          name: "additionalPayeePercentage",
          type: "uint256",
        },
        { internalType: "uint256", name: "royaltyFeeByID", type: "uint256" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "address", name: "operator", type: "address" },
      ],
      name: "isApprovedForAll",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "_minter", type: "address" }],
      name: "isMintWhitelisted",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "_to", type: "address" },
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "address", name: "_by", type: "address" },
      ],
      name: "mint_Ecf",
      outputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "minteraddr",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "name",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "newProjectsForbidden",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "nextProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "numHistoricalRandomizers",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "owner",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "ownerOf",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectArtistPaymentInfo",
      outputs: [
        { internalType: "address", name: "artistAddress", type: "address" },
        {
          internalType: "address",
          name: "additionalPayeePrimarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "additionalPayeePrimarySalesPercentage",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "additionalPayeeSecondarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "additionalPayeeSecondarySalesPercentage",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "secondaryMarketRoyaltyPercentage",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectDetails",
      outputs: [
        { internalType: "string", name: "projectName", type: "string" },
        { internalType: "string", name: "artist", type: "string" },
        { internalType: "string", name: "description", type: "string" },
        { internalType: "string", name: "website", type: "string" },
        { internalType: "string", name: "license", type: "string" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToAdditionalPayeePrimarySales",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToAdditionalPayeePrimarySalesPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToAdditionalPayeeSecondarySales",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToAdditionalPayeeSecondarySalesPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToArtistAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToSecondaryMarketRoyaltyPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "projectScriptByIndex",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "projectScriptBytecodeAddressByIndex",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectScriptDetails",
      outputs: [
        {
          internalType: "string",
          name: "scriptTypeAndVersion",
          type: "string",
        },
        { internalType: "string", name: "aspectRatio", type: "string" },
        { internalType: "uint256", name: "scriptCount", type: "uint256" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectStateData",
      outputs: [
        { internalType: "uint256", name: "invocations", type: "uint256" },
        { internalType: "uint256", name: "maxInvocations", type: "uint256" },
        { internalType: "bool", name: "active", type: "bool" },
        { internalType: "bool", name: "paused", type: "bool" },
        {
          internalType: "uint256",
          name: "completedTimestamp",
          type: "uint256",
        },
        { internalType: "bool", name: "locked", type: "bool" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectURIInfo",
      outputs: [
        { internalType: "string", name: "projectBaseURI", type: "string" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
        {
          internalType: "address payable",
          name: "_additionalPayeePrimarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeePrimarySalesPercentage",
          type: "uint256",
        },
        {
          internalType: "address payable",
          name: "_additionalPayeeSecondarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeeSecondarySalesPercentage",
          type: "uint256",
        },
      ],
      name: "proposeArtistPaymentAddressesAndSplits",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "proposedArtistAddressesAndSplitsHash",
      outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "randomizeraddr",
      outputs: [
        { internalType: "addr IRandomizerV2", name: "", type: "address" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "removeProjectLastScript",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
        { internalType: "bytes", name: "data", type: "bytes" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "operator", type: "address" },
        { internalType: "bool", name: "approved", type: "bool" },
      ],
      name: "setApprovalForAll",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_tokenId", type: "uint256" },
        { internalType: "bytes32", name: "_hashSeed", type: "bytes32" },
      ],
      name: "setTokenHash_8PT",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "startingProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
      name: "supportsInterface",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsActive",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsPaused",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenIdToHash",
      outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenIdToProjectId",
      outputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      stateMutability: "pure",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenURI",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_artblocksCurationRegistryAddress",
          type: "address",
        },
      ],
      name: "updateArtblocksCurationRegistryAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_artblocksDependencyRegistryAddress",
          type: "address",
        },
      ],
      name: "updateArtblocksDependencyRegistryAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address payable",
          name: "_artblocksPrimarySalesAddress",
          type: "address",
        },
      ],
      name: "updateArtblocksPrimarySalesAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "artblocksPrimarySalesPercentage_",
          type: "uint256",
        },
      ],
      name: "updateArtblocksPrimarySalesPercentage",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address payable",
          name: "_artblocksSecondarySalesAddress",
          type: "address",
        },
      ],
      name: "updateArtblocksSecondarySalesAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_artblocksSecondarySalesBPS",
          type: "uint256",
        },
      ],
      name: "updateArtblocksSecondarySalesBPS",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "string", name: "_defaultBaseURI", type: "string" },
      ],
      name: "updateDefaultBaseURI",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "updateMinteraddr",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
      ],
      name: "updateProjectArtistAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectArtistName", type: "string" },
      ],
      name: "updateProjectArtistName",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_aspectRatio", type: "string" },
      ],
      name: "updateProjectAspectRatio",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_newBaseURI", type: "string" },
      ],
      name: "updateProjectBaseURI",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectDescription", type: "string" },
      ],
      name: "updateProjectDescription",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectLicense", type: "string" },
      ],
      name: "updateProjectLicense",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint24", name: "_maxInvocations", type: "uint24" },
      ],
      name: "updateProjectMaxInvocations",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectName", type: "string" },
      ],
      name: "updateProjectName",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_scriptId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "updateProjectScript",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "bytes32",
          name: "_scriptTypeAndVersion",
          type: "bytes32",
        },
      ],
      name: "updateProjectScriptType",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "uint256",
          name: "_secondMarketRoyalty",
          type: "uint256",
        },
      ],
      name: "updateProjectSecondaryMarketRoyaltyPercentage",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectWebsite", type: "string" },
      ],
      name: "updateProjectWebsite",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_randomizerAddress",
          type: "address",
        },
      ],
      name: "updateRandomizerAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  v2Flex: [
    {
      inputs: [
        { internalType: "string", name: "_tokenName", type: "string" },
        { internalType: "string", name: "_tokenSymbol", type: "string" },
        {
          internalType: "address",
          name: "_randomizerContract",
          type: "address",
        },
      ],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "approved",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "ApprovalForAll",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_index",
          type: "uint256",
        },
      ],
      name: "ExternalAssetDependencyRemoved",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_index",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "string",
          name: "_cid",
          type: "string",
        },
        {
          indexed: false,
          internalType:
            "enum GenArt721CoreV2_BrightMomentsFlex.ExternalAssetDependencyType",
          name: "_dependencyType",
          type: "uint8",
        },
        {
          indexed: false,
          internalType: "uint24",
          name: "_externalAssetDependencyCount",
          type: "uint24",
        },
      ],
      name: "ExternalAssetDependencyUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType:
            "enum GenArt721CoreV2_BrightMomentsFlex.ExternalAssetDependencyType",
          name: "_dependencyType",
          type: "uint8",
        },
        {
          indexed: false,
          internalType: "string",
          name: "_gatewayAddress",
          type: "string",
        },
      ],
      name: "GatewayUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "_to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_tokenId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
      ],
      name: "Mint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
      ],
      name: "ProjectExternalAssetDependenciesLocked",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        { indexed: true, internalType: "address", name: "to", type: "address" },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "addMintWhitelisted",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "string", name: "_projectName", type: "string" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_pricePerTokenInWei",
          type: "uint256",
        },
      ],
      name: "addProject",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_cid", type: "string" },
        {
          internalType:
            "enum GenArt721CoreV2_BrightMomentsFlex.ExternalAssetDependencyType",
          name: "_dependencyType",
          type: "uint8",
        },
      ],
      name: "addProjectExternalAssetDependency",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "addProjectScript",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "addWhitelisted",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "admin",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "approve",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "owner", type: "address" }],
      name: "balanceOf",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "coreType",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "coreVersion",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "getApproved",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "getRoyaltyData",
      outputs: [
        { internalType: "address", name: "artistAddress", type: "address" },
        { internalType: "address", name: "additionalPayee", type: "address" },
        {
          internalType: "uint256",
          name: "additionalPayeePercentage",
          type: "uint256",
        },
        { internalType: "uint256", name: "royaltyFeeByID", type: "uint256" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      name: "hashToTokenId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "address", name: "operator", type: "address" },
      ],
      name: "isApprovedForAll",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "", type: "address" }],
      name: "isMintWhitelisted",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "", type: "address" }],
      name: "isWhitelisted",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "lockProjectExternalAssetDependencies",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "_to", type: "address" },
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "address", name: "_by", type: "address" },
      ],
      name: "mint",
      outputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "name",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "nextProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "ownerOf",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "preferredArweaveGateway",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "preferredIPFSGateway",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectDetails",
      outputs: [
        { internalType: "string", name: "projectName", type: "string" },
        { internalType: "string", name: "artist", type: "string" },
        { internalType: "string", name: "description", type: "string" },
        { internalType: "string", name: "website", type: "string" },
        { internalType: "string", name: "license", type: "string" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "projectExternalAssetDependencyByIndex",
      outputs: [
        {
          components: [
            { internalType: "string", name: "cid", type: "string" },
            {
              internalType:
                "enum GenArt721CoreV2_BrightMomentsFlex.ExternalAssetDependencyType",
              name: "dependencyType",
              type: "uint8",
            },
          ],
          internalType:
            "struct GenArt721CoreV2_BrightMomentsFlex.ExternalAssetDependency",
          name: "",
          type: "tuple",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectExternalAssetDependencyCount",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToAdditionalPayee",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToAdditionalPayeePercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToArtistAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToCurrencyAddress",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToCurrencySymbol",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToPricePerTokenInWei",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "projectIdToSecondaryMarketRoyaltyPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "projectScriptByIndex",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectScriptInfo",
      outputs: [
        { internalType: "string", name: "scriptJSON", type: "string" },
        { internalType: "uint256", name: "scriptCount", type: "uint256" },
        { internalType: "string", name: "ipfsHash", type: "string" },
        { internalType: "bool", name: "locked", type: "bool" },
        { internalType: "bool", name: "paused", type: "bool" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectTokenInfo",
      outputs: [
        { internalType: "address", name: "artistAddress", type: "address" },
        {
          internalType: "uint256",
          name: "pricePerTokenInWei",
          type: "uint256",
        },
        { internalType: "uint256", name: "invocations", type: "uint256" },
        { internalType: "uint256", name: "maxInvocations", type: "uint256" },
        { internalType: "bool", name: "active", type: "bool" },
        { internalType: "address", name: "additionalPayee", type: "address" },
        {
          internalType: "uint256",
          name: "additionalPayeePercentage",
          type: "uint256",
        },
        { internalType: "string", name: "currency", type: "string" },
        { internalType: "address", name: "currencyAddress", type: "address" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectURIInfo",
      outputs: [
        { internalType: "string", name: "projectBaseURI", type: "string" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "randomizerContract",
      outputs: [
        { internalType: "contract IRandomizer", name: "", type: "address" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "removeMintWhitelisted",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "removeProjectExternalAssetDependency",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "removeProjectLastScript",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "removeWhitelisted",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "renderProviderAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "renderProviderPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
        { internalType: "bytes", name: "_data", type: "bytes" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "operator", type: "address" },
        { internalType: "bool", name: "approved", type: "bool" },
      ],
      name: "setApprovalForAll",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
      name: "supportsInterface",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsActive",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsLocked",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsPaused",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "tokenIdToHash",
      outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "tokenIdToProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenURI",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "_adminAddress", type: "address" },
      ],
      name: "updateAdmin",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "string", name: "_gateway", type: "string" }],
      name: "updateArweaveGateway",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "string", name: "_gateway", type: "string" }],
      name: "updateIPFSGateway",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_additionalPayee",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeePercentage",
          type: "uint256",
        },
      ],
      name: "updateProjectAdditionalPayeeInfo",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
      ],
      name: "updateProjectArtistAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectArtistName", type: "string" },
      ],
      name: "updateProjectArtistName",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_newBaseURI", type: "string" },
      ],
      name: "updateProjectBaseURI",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_currencySymbol", type: "string" },
        { internalType: "address", name: "_currencyAddress", type: "address" },
      ],
      name: "updateProjectCurrencyInfo",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectDescription", type: "string" },
      ],
      name: "updateProjectDescription",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
        { internalType: "string", name: "_cid", type: "string" },
        {
          internalType:
            "enum GenArt721CoreV2_BrightMomentsFlex.ExternalAssetDependencyType",
          name: "_dependencyType",
          type: "uint8",
        },
      ],
      name: "updateProjectExternalAssetDependency",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_ipfsHash", type: "string" },
      ],
      name: "updateProjectIpfsHash",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectLicense", type: "string" },
      ],
      name: "updateProjectLicense",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_maxInvocations", type: "uint256" },
      ],
      name: "updateProjectMaxInvocations",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectName", type: "string" },
      ],
      name: "updateProjectName",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "uint256",
          name: "_pricePerTokenInWei",
          type: "uint256",
        },
      ],
      name: "updateProjectPricePerTokenInWei",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_scriptId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "updateProjectScript",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectScriptJSON", type: "string" },
      ],
      name: "updateProjectScriptJSON",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "uint256",
          name: "_secondMarketRoyalty",
          type: "uint256",
        },
      ],
      name: "updateProjectSecondaryMarketRoyaltyPercentage",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectWebsite", type: "string" },
      ],
      name: "updateProjectWebsite",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_randomizerAddress",
          type: "address",
        },
      ],
      name: "updateRandomizerAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address payable",
          name: "_renderProviderAddress",
          type: "address",
        },
      ],
      name: "updateRenderProviderAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_renderProviderPercentage",
          type: "uint256",
        },
      ],
      name: "updateRenderProviderPercentage",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  v3Flex: [
    {
      inputs: [
        { internalType: "string", name: "_tokenName", type: "string" },
        { internalType: "string", name: "_tokenSymbol", type: "string" },
        {
          internalType: "address",
          name: "_renderProviderAddress",
          type: "address",
        },
        {
          internalType: "address",
          name: "_platformProviderAddress",
          type: "address",
        },
        {
          internalType: "address",
          name: "_randomizerContract",
          type: "address",
        },
        { internalType: "address", name: "_adminACLContract", type: "address" },
        {
          internalType: "uint248",
          name: "_startingProjectId",
          type: "uint248",
        },
        {
          internalType: "bool",
          name: "_autoApproveArtistSplitProposals",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
      ],
      name: "AcceptedArtistAddressesAndSplits",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "approved",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "ApprovalForAll",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_index",
          type: "uint256",
        },
      ],
      name: "ExternalAssetDependencyRemoved",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_index",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "string",
          name: "_cid",
          type: "string",
        },
        {
          indexed: false,
          internalType:
            "enum IGenArt721CoreContractV3_Engine_Flex.ExternalAssetDependencyType",
          name: "_dependencyType",
          type: "uint8",
        },
        {
          indexed: false,
          internalType: "uint24",
          name: "_externalAssetDependencyCount",
          type: "uint24",
        },
      ],
      name: "ExternalAssetDependencyUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType:
            "enum IGenArt721CoreContractV3_Engine_Flex.ExternalAssetDependencyType",
          name: "_dependencyType",
          type: "uint8",
        },
        {
          indexed: false,
          internalType: "string",
          name: "_gatewayAddress",
          type: "string",
        },
      ],
      name: "GatewayUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "_to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "_tokenId",
          type: "uint256",
        },
      ],
      name: "Mint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "_currentMinter",
          type: "address",
        },
      ],
      name: "MinterUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "previousOwner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "bytes32",
          name: "_field",
          type: "bytes32",
        },
      ],
      name: "PlatformUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
      ],
      name: "ProjectExternalAssetDependenciesLocked",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "bytes32",
          name: "_update",
          type: "bytes32",
        },
      ],
      name: "ProjectUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_projectId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "address",
          name: "_artistAddress",
          type: "address",
        },
        {
          indexed: false,
          internalType: "address",
          name: "_additionalPayeePrimarySales",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "_additionalPayeePrimarySalesPercentage",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "address",
          name: "_additionalPayeeSecondarySales",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "_additionalPayeeSecondarySalesPercentage",
          type: "uint256",
        },
      ],
      name: "ProposedArtistAddressesAndSplits",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        { indexed: true, internalType: "address", name: "to", type: "address" },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      inputs: [
        { internalType: "string", name: "_projectName", type: "string" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
      ],
      name: "addProject",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_cidOrData", type: "string" },
        {
          internalType:
            "enum IGenArt721CoreContractV3_Engine_Flex.ExternalAssetDependencyType",
          name: "_dependencyType",
          type: "uint8",
        },
      ],
      name: "addProjectExternalAssetDependency",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "addProjectScript",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "admin",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "_sender", type: "address" },
        { internalType: "address", name: "_contract", type: "address" },
        { internalType: "bytes4", name: "_selector", type: "bytes4" },
      ],
      name: "adminACLAllowed",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "adminACLContract",
      outputs: [
        { internalType: "contract IAdminACLV0", name: "", type: "address" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
        {
          internalType: "address payable",
          name: "_additionalPayeePrimarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeePrimarySalesPercentage",
          type: "uint256",
        },
        {
          internalType: "address payable",
          name: "_additionalPayeeSecondarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeeSecondarySalesPercentage",
          type: "uint256",
        },
      ],
      name: "adminAcceptArtistAddressesAndSplits",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "approve",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "artblocksDependencyRegistryAddress",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "autoApproveArtistSplitProposals",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "owner", type: "address" }],
      name: "balanceOf",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "coreType",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "pure",
      type: "function",
    },
    {
      inputs: [],
      name: "coreVersion",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "pure",
      type: "function",
    },
    {
      inputs: [],
      name: "defaultBaseURI",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "forbidNewProjects",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "getApproved",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_index", type: "uint256" }],
      name: "getHistoricalRandomizerAt",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_price", type: "uint256" },
      ],
      name: "getPrimaryRevenueSplits",
      outputs: [
        {
          internalType: "uint256",
          name: "renderProviderRevenue_",
          type: "uint256",
        },
        {
          internalType: "address payable",
          name: "renderProviderAddress_",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "platformProviderRevenue_",
          type: "uint256",
        },
        {
          internalType: "address payable",
          name: "platformProviderAddress_",
          type: "address",
        },
        { internalType: "uint256", name: "artistRevenue_", type: "uint256" },
        {
          internalType: "address payable",
          name: "artistAddress_",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "additionalPayeePrimaryRevenue_",
          type: "uint256",
        },
        {
          internalType: "address payable",
          name: "additionalPayeePrimaryAddress_",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "getRoyalties",
      outputs: [
        {
          internalType: "address payable[]",
          name: "recipients",
          type: "address[]",
        },
        { internalType: "uint256[]", name: "bps", type: "uint256[]" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "address", name: "operator", type: "address" },
      ],
      name: "isApprovedForAll",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "_minter", type: "address" }],
      name: "isMintWhitelisted",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "lockProjectExternalAssetDependencies",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "_to", type: "address" },
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "address", name: "_by", type: "address" },
      ],
      name: "mint_Ecf",
      outputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "minterContract",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "name",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "newProjectsForbidden",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "nextProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "numHistoricalRandomizers",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "owner",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
      name: "ownerOf",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "platformProviderPrimarySalesAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "platformProviderPrimarySalesPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "platformProviderSecondarySalesAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "platformProviderSecondarySalesBPS",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "preferredArweaveGateway",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "preferredIPFSGateway",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectArtistPaymentInfo",
      outputs: [
        { internalType: "address", name: "artistAddress", type: "address" },
        {
          internalType: "address",
          name: "additionalPayeePrimarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "additionalPayeePrimarySalesPercentage",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "additionalPayeeSecondarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "additionalPayeeSecondarySalesPercentage",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "secondaryMarketRoyaltyPercentage",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectDetails",
      outputs: [
        { internalType: "string", name: "projectName", type: "string" },
        { internalType: "string", name: "artist", type: "string" },
        { internalType: "string", name: "description", type: "string" },
        { internalType: "string", name: "website", type: "string" },
        { internalType: "string", name: "license", type: "string" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "projectExternalAssetDependencyByIndex",
      outputs: [
        {
          components: [
            { internalType: "string", name: "cid", type: "string" },
            {
              internalType:
                "enum IGenArt721CoreContractV3_Engine_Flex.ExternalAssetDependencyType",
              name: "dependencyType",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "bytecodeAddress",
              type: "address",
            },
            { internalType: "string", name: "data", type: "string" },
          ],
          internalType:
            "struct IGenArt721CoreContractV3_Engine_Flex.ExternalAssetDependencyWithData",
          name: "",
          type: "tuple",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectExternalAssetDependencyCount",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToAdditionalPayeePrimarySales",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToAdditionalPayeePrimarySalesPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToAdditionalPayeeSecondarySales",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToAdditionalPayeeSecondarySalesPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToArtistAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectIdToSecondaryMarketRoyaltyPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "projectScriptByIndex",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "projectScriptBytecodeAddressByIndex",
      outputs: [{ internalType: "address", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectScriptDetails",
      outputs: [
        {
          internalType: "string",
          name: "scriptTypeAndVersion",
          type: "string",
        },
        { internalType: "string", name: "aspectRatio", type: "string" },
        { internalType: "uint256", name: "scriptCount", type: "uint256" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectStateData",
      outputs: [
        { internalType: "uint256", name: "invocations", type: "uint256" },
        { internalType: "uint256", name: "maxInvocations", type: "uint256" },
        { internalType: "bool", name: "active", type: "bool" },
        { internalType: "bool", name: "paused", type: "bool" },
        {
          internalType: "uint256",
          name: "completedTimestamp",
          type: "uint256",
        },
        { internalType: "bool", name: "locked", type: "bool" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "projectURIInfo",
      outputs: [
        { internalType: "string", name: "projectBaseURI", type: "string" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
        {
          internalType: "address payable",
          name: "_additionalPayeePrimarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeePrimarySalesPercentage",
          type: "uint256",
        },
        {
          internalType: "address payable",
          name: "_additionalPayeeSecondarySales",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_additionalPayeeSecondarySalesPercentage",
          type: "uint256",
        },
      ],
      name: "proposeArtistPaymentAddressesAndSplits",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      name: "proposedArtistAddressesAndSplitsHash",
      outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "randomizerContract",
      outputs: [
        {
          internalType: "contract IRandomizer_V3CoreBase",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
      ],
      name: "removeProjectExternalAssetDependency",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "removeProjectLastScript",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "renderProviderPrimarySalesAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "renderProviderPrimarySalesPercentage",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "renderProviderSecondarySalesAddress",
      outputs: [{ internalType: "address payable", name: "", type: "address" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "renderProviderSecondarySalesBPS",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
        { internalType: "bytes", name: "data", type: "bytes" },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "operator", type: "address" },
        { internalType: "bool", name: "approved", type: "bool" },
      ],
      name: "setApprovalForAll",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_tokenId", type: "uint256" },
        { internalType: "bytes32", name: "_hashSeed", type: "bytes32" },
      ],
      name: "setTokenHash_8PT",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "startingProjectId",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
      name: "supportsInterface",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsActive",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      name: "toggleProjectIsPaused",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenIdToHash",
      outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenIdToHashSeed",
      outputs: [{ internalType: "bytes12", name: "", type: "bytes12" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenIdToProjectId",
      outputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
      ],
      stateMutability: "pure",
      type: "function",
    },
    {
      inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
      name: "tokenURI",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_artblocksDependencyRegistryAddress",
          type: "address",
        },
      ],
      name: "updateArtblocksDependencyRegistryAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "string", name: "_gateway", type: "string" }],
      name: "updateArweaveGateway",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "string", name: "_defaultBaseURI", type: "string" },
      ],
      name: "updateDefaultBaseURI",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "string", name: "_gateway", type: "string" }],
      name: "updateIPFSGateway",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "_address", type: "address" }],
      name: "updateMinterContract",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "address payable",
          name: "_artistAddress",
          type: "address",
        },
      ],
      name: "updateProjectArtistAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectArtistName", type: "string" },
      ],
      name: "updateProjectArtistName",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_aspectRatio", type: "string" },
      ],
      name: "updateProjectAspectRatio",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_newBaseURI", type: "string" },
      ],
      name: "updateProjectBaseURI",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectDescription", type: "string" },
      ],
      name: "updateProjectDescription",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_index", type: "uint256" },
        { internalType: "string", name: "_cidOrData", type: "string" },
        {
          internalType:
            "enum IGenArt721CoreContractV3_Engine_Flex.ExternalAssetDependencyType",
          name: "_dependencyType",
          type: "uint8",
        },
      ],
      name: "updateProjectExternalAssetDependency",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectLicense", type: "string" },
      ],
      name: "updateProjectLicense",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint24", name: "_maxInvocations", type: "uint24" },
      ],
      name: "updateProjectMaxInvocations",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectName", type: "string" },
      ],
      name: "updateProjectName",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "uint256", name: "_scriptId", type: "uint256" },
        { internalType: "string", name: "_script", type: "string" },
      ],
      name: "updateProjectScript",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "bytes32",
          name: "_scriptTypeAndVersion",
          type: "bytes32",
        },
      ],
      name: "updateProjectScriptType",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        {
          internalType: "uint256",
          name: "_secondMarketRoyalty",
          type: "uint256",
        },
      ],
      name: "updateProjectSecondaryMarketRoyaltyPercentage",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "_projectId", type: "uint256" },
        { internalType: "string", name: "_projectWebsite", type: "string" },
      ],
      name: "updateProjectWebsite",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "renderProviderPrimarySalesPercentage_",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "platformProviderPrimarySalesPercentage_",
          type: "uint256",
        },
      ],
      name: "updateProviderPrimarySalesPercentages",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address payable",
          name: "_renderProviderPrimarySalesAddress",
          type: "address",
        },
        {
          internalType: "address payable",
          name: "_renderProviderSecondarySalesAddress",
          type: "address",
        },
        {
          internalType: "address payable",
          name: "_platformProviderPrimarySalesAddress",
          type: "address",
        },
        {
          internalType: "address payable",
          name: "_platformProviderSecondarySalesAddress",
          type: "address",
        },
      ],
      name: "updateProviderSalesAddresses",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_renderProviderSecondarySalesBPS",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_platformProviderSecondarySalesBPS",
          type: "uint256",
        },
      ],
      name: "updateProviderSecondarySalesBPS",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_randomizerAddress",
          type: "address",
        },
      ],
      name: "updateRandomizerAddress",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  bm: [],
  PMPV0: [
    {
      inputs: [
        {
          internalType: "contract IDelegateRegistry",
          name: "delegateRegistry_",
          type: "address",
        },
      ],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    { inputs: [], name: "ReentrancyGuardReentrantCall", type: "error" },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address",
          name: "delegationRegistry",
          type: "address",
        },
      ],
      name: "DelegationRegistryUpdated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address",
          name: "coreContract",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "projectId",
          type: "uint256",
        },
        {
          components: [
            { internalType: "string", name: "key", type: "string" },
            {
              components: [
                {
                  internalType: "enum IPMPV0.AuthOption",
                  name: "authOption",
                  type: "uint8",
                },
                {
                  internalType: "enum IPMPV0.ParamType",
                  name: "paramType",
                  type: "uint8",
                },
                {
                  internalType: "uint48",
                  name: "pmpLockedAfterTimestamp",
                  type: "uint48",
                },
                {
                  internalType: "address",
                  name: "authAddress",
                  type: "address",
                },
                {
                  internalType: "string[]",
                  name: "selectOptions",
                  type: "string[]",
                },
                { internalType: "bytes32", name: "minRange", type: "bytes32" },
                { internalType: "bytes32", name: "maxRange", type: "bytes32" },
              ],
              internalType: "struct IPMPV0.PMPConfig",
              name: "pmpConfig",
              type: "tuple",
            },
          ],
          indexed: false,
          internalType: "struct IPMPV0.PMPInputConfig[]",
          name: "pmpInputConfigs",
          type: "tuple[]",
        },
        {
          indexed: false,
          internalType: "uint8",
          name: "projectConfigNonce",
          type: "uint8",
        },
      ],
      name: "ProjectConfigured",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address",
          name: "coreContract",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "projectId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "contract IPMPConfigureHook",
          name: "tokenPMPPostConfigHook",
          type: "address",
        },
        {
          indexed: false,
          internalType: "contract IPMPAugmentHook",
          name: "tokenPMPReadAugmentationHook",
          type: "address",
        },
      ],
      name: "ProjectHooksConfigured",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address",
          name: "coreContract",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
        {
          components: [
            { internalType: "string", name: "key", type: "string" },
            {
              internalType: "enum IPMPV0.ParamType",
              name: "configuredParamType",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "configuredValue",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "configuringArtistString",
              type: "bool",
            },
            {
              internalType: "string",
              name: "configuredValueString",
              type: "string",
            },
          ],
          indexed: false,
          internalType: "struct IPMPV0.PMPInput[]",
          name: "pmpInputs",
          type: "tuple[]",
        },
        {
          indexed: false,
          internalType: "address[]",
          name: "authAddresses",
          type: "address[]",
        },
      ],
      name: "TokenParamsConfigured",
      type: "event",
    },
    {
      inputs: [],
      name: "DELEGATION_REGISTRY_TOKEN_OWNER_RIGHTS",
      outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "coreContract", type: "address" },
        { internalType: "uint256", name: "projectId", type: "uint256" },
        {
          components: [
            { internalType: "string", name: "key", type: "string" },
            {
              components: [
                {
                  internalType: "enum IPMPV0.AuthOption",
                  name: "authOption",
                  type: "uint8",
                },
                {
                  internalType: "enum IPMPV0.ParamType",
                  name: "paramType",
                  type: "uint8",
                },
                {
                  internalType: "uint48",
                  name: "pmpLockedAfterTimestamp",
                  type: "uint48",
                },
                {
                  internalType: "address",
                  name: "authAddress",
                  type: "address",
                },
                {
                  internalType: "string[]",
                  name: "selectOptions",
                  type: "string[]",
                },
                { internalType: "bytes32", name: "minRange", type: "bytes32" },
                { internalType: "bytes32", name: "maxRange", type: "bytes32" },
              ],
              internalType: "struct IPMPV0.PMPConfig",
              name: "pmpConfig",
              type: "tuple",
            },
          ],
          internalType: "struct IPMPV0.PMPInputConfig[]",
          name: "pmpInputConfigs",
          type: "tuple[]",
        },
      ],
      name: "configureProject",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "coreContract", type: "address" },
        { internalType: "uint256", name: "projectId", type: "uint256" },
        {
          internalType: "contract IPMPConfigureHook",
          name: "tokenPMPPostConfigHook",
          type: "address",
        },
        {
          internalType: "contract IPMPAugmentHook",
          name: "tokenPMPReadAugmentationHook",
          type: "address",
        },
      ],
      name: "configureProjectHooks",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "coreContract", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
        {
          components: [
            { internalType: "string", name: "key", type: "string" },
            {
              internalType: "enum IPMPV0.ParamType",
              name: "configuredParamType",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "configuredValue",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "configuringArtistString",
              type: "bool",
            },
            {
              internalType: "string",
              name: "configuredValueString",
              type: "string",
            },
          ],
          internalType: "struct IPMPV0.PMPInput[]",
          name: "pmpInputs",
          type: "tuple[]",
        },
      ],
      name: "configureTokenParams",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "delegateRegistry",
      outputs: [
        {
          internalType: "contract IDelegateRegistry",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "coreContract", type: "address" },
        { internalType: "uint256", name: "projectId", type: "uint256" },
      ],
      name: "getProjectConfig",
      outputs: [
        { internalType: "string[]", name: "pmpKeys", type: "string[]" },
        { internalType: "uint8", name: "configNonce", type: "uint8" },
        {
          internalType: "contract IPMPConfigureHook",
          name: "tokenPMPPostConfigHook",
          type: "address",
        },
        {
          internalType: "contract IPMPAugmentHook",
          name: "tokenPMPReadAugmentationHook",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "coreContract", type: "address" },
        { internalType: "uint256", name: "projectId", type: "uint256" },
        { internalType: "string", name: "pmpKey", type: "string" },
      ],
      name: "getProjectPMPConfig",
      outputs: [
        {
          components: [
            {
              internalType: "uint8",
              name: "highestConfigNonce",
              type: "uint8",
            },
            {
              internalType: "enum IPMPV0.AuthOption",
              name: "authOption",
              type: "uint8",
            },
            {
              internalType: "enum IPMPV0.ParamType",
              name: "paramType",
              type: "uint8",
            },
            {
              internalType: "uint48",
              name: "pmpLockedAfterTimestamp",
              type: "uint48",
            },
            { internalType: "address", name: "authAddress", type: "address" },
            {
              internalType: "uint8",
              name: "selectOptionsLength",
              type: "uint8",
            },
            {
              internalType: "string[]",
              name: "selectOptions",
              type: "string[]",
            },
            { internalType: "bytes32", name: "minRange", type: "bytes32" },
            { internalType: "bytes32", name: "maxRange", type: "bytes32" },
          ],
          internalType: "struct IPMPV0.PMPConfigView",
          name: "pmpConfigView",
          type: "tuple",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "coreContract", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
        { internalType: "string", name: "pmpKey", type: "string" },
      ],
      name: "getTokenPMPStorage",
      outputs: [
        {
          components: [
            {
              internalType: "enum IPMPV0.ParamType",
              name: "configuredParamType",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "configuredValue",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "artistConfiguredValueString",
              type: "string",
            },
            {
              internalType: "string",
              name: "nonArtistConfiguredValueString",
              type: "string",
            },
          ],
          internalType: "struct IPMPV0.PMPStorage",
          name: "pmp",
          type: "tuple",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "coreContract", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "getTokenParams",
      outputs: [
        {
          components: [
            { internalType: "string", name: "key", type: "string" },
            { internalType: "string", name: "value", type: "string" },
          ],
          internalType: "struct IWeb3Call.TokenParam[]",
          name: "tokenParams",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "wallet", type: "address" },
        { internalType: "address", name: "coreContract", type: "address" },
        { internalType: "uint256", name: "tokenId", type: "uint256" },
      ],
      name: "isTokenOwnerOrDelegate",
      outputs: [
        { internalType: "bool", name: "isTokenOwnerOrDelegate_", type: "bool" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
      name: "supportsInterface",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      stateMutability: "view",
      type: "function",
    },
  ],
};

// Create a modified copy of abi.v2 and store it in abi.bm
abi.bm = abi.v2.map((entry) =>
  entry.name === "projectScriptInfo"
    ? {
        ...entry,
        outputs: entry.outputs.filter(
          (output) => output.name !== "useHashString",
        ),
      }
    : entry,
);
